#N canvas 140 310 652 693 10;
#X declare -path INSTR;
#X declare -path SOPIPD;
#X obj 20 504 cnv 15 600 10 empty empty SOPImobile 140 120 0 46 -258113
-66577 0;
#X obj 20 515 cnv 15 600 80 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 17 79 cnv 15 600 80 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 70 246 tgl 40 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 80 203 loadbang;
#X msg 80 224 0;
#X obj 17 160 cnv 10 600 10 empty empty PESI_OnBody 140 -120 0 46 -258113
-66577 0;
#X obj 70 348 vline~;
#X obj 70 302 sel 1 0;
#X obj 480 137 declare -path INSTR;
#X obj 36 458 r vibra;
#X obj 339 343 clip~ -1 1;
#X obj 339 321 hip~ 3;
#X obj 408 343 clip~ -1 1;
#X obj 408 322 hip~ 3;
#X obj 36 479 spigot;
#N canvas 0 811 619 177 init 0;
#X obj 183 -245 r instID;
#X obj 170 -154 s instID;
#X obj 92 -260 loadbang;
#X obj 184 -219 nbx 5 14 -1e+37 1e+37 0 1 empty empty empty 0 -8 0
10 -262144 -1 -1 3 256;
#X obj 170 -182 f;
#X obj 92 -219 t b b;
#X obj 95 -199 del 30;
#X text 249 -237 This patch pushes the latest selected instrument;
#X connect 0 0 3 0;
#X connect 2 0 5 0;
#X connect 3 0 4 1;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 5 1 3 0;
#X connect 6 0 4 0;
#X restore 480 99 pd init;
#X msg 111 327 0 500;
#X obj 480 118 declare -path SOPIPD;
#X obj 466 248 GREEN_onbody;
#X obj 339 365 *~;
#X obj 379 365 *~;
#X msg 70 326 1 400;
#X obj 339 249 RED_onbody;
#X text 68 118 input data from the iPhone built-in sensors;
#N canvas 160 27 570 471 ----------sensorInputReceiveObjects-------
0;
#X obj 25 -364 r gyroscopeX;
#X obj 104 -364 r gyroscopeY;
#X obj 183 -364 r gyroscopeZ;
#X text 21 -386 Gyroscope 3 axis- float range between -1 and 1;
#X text 23 -322 Accelerometer 3 axis- float range between -1 and 1
;
#X text 6 -265 Touch Input X and Y - int range x (0 - 320) and y (0
- 480);
#X obj 23 -245 r touchPositionX;
#X obj 128 -245 r touchPositionY;
#X obj 375 -245 r screenIsBeingTouched;
#X text 380 -221 - int 0 and 1;
#X obj 26 -179 adc~;
#X text 6 -343 ------------------------------------------------------------
;
#X text 5 -278 ------------------------------------------------------------
;
#X text 2 -201 ------------------------------------------------------------
;
#X text 1 -74 ------------------------------------------------------------
;
#X obj 375 -61 outlet;
#X text 361 -201 ----------------------------;
#X text 366 -278 ---------------------------;
#X text 15 -55 NETWORKING;
#X obj 24 -303 r accelerationX;
#X obj 128 -303 r accelerationY;
#X obj 232 -303 r accelerationZ;
#X text 14 -36 In PESI_OnBody networking is structured through CocoaOSC
\, an Objective-C library for sending and receiveing OSC messages.
The IP and the port numbers of the mainhost computer that the mobile
will send OSC messages to \, can be configured under SOPImobile.xcodeprj
/ SOPI classes / SOPIperformanceViewController.m in //OSC section [connection
receivePacket]. The OSC tags used in OSC messages can be modified under
//LOOPS-- section in the same file.;
#X text 19 -161 Audio input. Note that in this version audio input
and vibration output cannot run at the sametime. This should be set
up in SOPImobile.xcodeprj file under SOPI classes in SOPIAppDelegate.m
within the _audioController section. In its current state \, the default
setting \, the code enables the vibration and disables the audio input.
;
#X connect 8 0 15 0;
#X restore 70 133 pd ----------sensorInputReceiveObjects-------;
#X obj 36 517 s vibrate;
#X obj 339 519 dac~;
#X text 75 367 when the screen is being touched;
#X text 73 378 it turns the volume on;
#X text 22 578 the vibration motor.;
#X text 338 539 Audio signals are connected to;
#X text 336 553 iPhone's speaker and headphones (left-right);
#X text 436 233 Sound Module_ GREEN;
#X text 316 233 Sound Module_ RED;
#X text 502 286 Sound Module 1 _ BLUE;
#X text 21 539 Bang messages are sent to puredata callbacks in SOPImobile.xcodeprj
/ SOPI classes / SOPIperformanceViewController.m to activate;
#X obj 25 82 --READ--ME--;
#X text 387 388 The sound modules here are just;
#X text 388 400 example patches to demonstrate the;
#X text 389 414 PESI_OnBody features.;
#X obj 448 274 BLUE_onbody;
#N canvas 205 432 484 333 Licence 0;
#X text 66 10 Created by: Koray Tahiroglu \, Miguel Valero Espada \,
Nuno Correia \, James Nesfield \;;
#X text 66 50 Academy of Finland (project 137646) The Notion of Participative
and Enacting Sonic Interaction - PESI;
#X text 65 89 SOPI research group \, Aalto University \, School of
Arts \, Design and Architecture;
#X text 66 136 Copyright (c) 2013 Aalto University. All rights reserved.
<koray.tahiroglu@aalto.fi>;
#X text 69 177 BSD Simplified License. * For information on usage and
redistribution \, and for a DISCLAIMER OF ALL * WARRANTIES \, see the
file \, "LICENSE.txt \, " in this distribution.;
#X text 54 241 * * See https://github.com/SopiMlab/ for documentation
* */;
#X restore 108 83 pd Licence;
#N canvas 287 536 450 300 README 0;
#X text 15 26 The mobile instrument has three sound modules. Tilt ges-
ture controls the main features of sound modules in PESI mobile instruments.
Touch input is the key binary data for the audio synthesis in the mobile
instrument. Touch in- put provides on/off control feature. The overall
magnitude of acceleration controls the dynamics of the mobile instru-
ment. When the instrument is tilted along the x-axis \, haptic feedback
responds to the beginning and the end points in the control range.
Haptic feedback is activated through the vibration motor in iPhone.
;
#X restore 354 204 pd README sound & action;
#X connect 3 0 8 0;
#X connect 3 0 15 1;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X connect 7 0 21 1;
#X connect 7 0 20 1;
#X connect 8 0 22 0;
#X connect 8 1 17 0;
#X connect 10 0 15 0;
#X connect 11 0 20 0;
#X connect 12 0 11 0;
#X connect 13 0 21 0;
#X connect 14 0 13 0;
#X connect 15 0 26 0;
#X connect 17 0 7 0;
#X connect 19 0 12 0;
#X connect 19 0 14 0;
#X connect 20 0 27 0;
#X connect 21 0 27 1;
#X connect 22 0 7 0;
#X connect 23 0 12 0;
#X connect 23 0 14 0;
#X connect 25 0 3 0;
#X connect 41 0 12 0;
#X connect 41 0 14 0;
